{
  "functions": {
    "canvas": "\n\n\n\n\n\n\n",
    "paperjs": "paper.project.layers[0].removeChildren();\nvar cols=16, size=22, off=[60, 40], space=[ 32.55, 1.193 ];\nfor (var i = 0, l = 624;  i < l;  i++) {\n  var even      = i % 2,\n      row_n     = int(i / cols),\n      col_n     = i % cols,\n      odd_row   = mod( i % (2 * cols), cols ),\n      third_row = mod( i % (3 * cols), cols ),\n      x         = off[0] + space[0] * (i % cols),\n      y         = off[1] + space[1]  * mod(i, cols),\n      boo       = (odd_row && ! even) || (!odd_row && even),\n      rotation  = !odd_row ? (30 + i * 60) : (90+ i * 60),\n      scale_out =  0,\n      b = new Path.RegularPolygon( [ scale(x), scale(y) ], 3, scale(size - scale_out) );\n  b.fillColor = '#f00';\n  //if (!((i-15) % 15) || !((i-6) % 15)) {  b.remove(); continue; }\n  b.rotate( rotation * 1.0032, new Point( scale(x), scale(y) ) );\n  b.position.x -= scale(boo * 10.7);\n  \n  //b.fillColor.hue =-180 + (i / 40);\n  b.fillColor.saturation = 0;\n  b.fillColor.alpha =  Math.sin(i/190) * 1.0 + 0.2; // 1 - i / l;\n  b.fillColor.brightness = 0.1;\n  \n//if (row_n == 0 || col_n == 0 || col_n == cols-1 || row_n==38) { b.fillColor.alpha = 0.45;}\n//if (i in a2o([405,406,409,420,421,422,423,424,425,437,438,441])) { b.fillColor = '#e70'; }\n}\n\n\n\n\n\n\n\n",
    "initial": "\n\n\n\n\n\n\n"
  },
  "parameters": {
    "fix this": {
      "initial": 0,
      "raw": 0,
      "formula": "",
      "id": "fix this",
      "history_length": 50,
      "history": [
        null,
        null,
        null,
        null
      ]
    }
  }
}